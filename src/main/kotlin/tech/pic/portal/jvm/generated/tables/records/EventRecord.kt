/*
 * This file is generated by jOOQ.
 */
package tech.pic.portal.jvm.generated.tables.records


import java.time.LocalDate
import java.time.OffsetDateTime
import java.util.UUID

import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl

import tech.pic.portal.jvm.generated.tables.Event


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class EventRecord() : UpdatableRecordImpl<EventRecord>(Event.EVENT) {

    open var id: UUID?
        set(value): Unit = set(0, value)
        get(): UUID? = get(0) as UUID?

    open var eventDate: LocalDate?
        set(value): Unit = set(1, value)
        get(): LocalDate? = get(1) as LocalDate?

    open var eventName: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var createdBy: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    open var createdOn: OffsetDateTime?
        set(value): Unit = set(4, value)
        get(): OffsetDateTime? = get(4) as OffsetDateTime?

    open var updatedBy: String?
        set(value): Unit = set(5, value)
        get(): String? = get(5) as String?

    open var updatedOn: OffsetDateTime?
        set(value): Unit = set(6, value)
        get(): OffsetDateTime? = get(6) as OffsetDateTime?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<UUID?> = super.key() as Record1<UUID?>

    /**
     * Create a detached, initialised EventRecord
     */
    constructor(id: UUID? = null, eventDate: LocalDate? = null, eventName: String? = null, createdBy: String? = null, createdOn: OffsetDateTime? = null, updatedBy: String? = null, updatedOn: OffsetDateTime? = null): this() {
        this.id = id
        this.eventDate = eventDate
        this.eventName = eventName
        this.createdBy = createdBy
        this.createdOn = createdOn
        this.updatedBy = updatedBy
        this.updatedOn = updatedOn
        resetChangedOnNotNull()
    }
}
